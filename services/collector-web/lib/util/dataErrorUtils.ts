enum DataEntryErrorType {
    DataNotEntered = '#dataNotEntered',
    FieldIllegible = '#fieldIllegible',
    LocationNotFound = '#locationNotFound',
    ProviderNotFount = '#providerNotFound',
}

enum DataEntryField {
    AdverseEvents = 'complicationsIndicated',
    AdverseEvent1 = 'complication1',
    AdverseEvent2 = 'complication2',
    AnesthesiaEndDate = 'anesEndDate',
    AnesthesiaEndTime = 'anesEndTime',
    AnesthesiaReadyDate = 'anesReadyDate',
    AnesthesiaReadyTime = 'anesReadyTime',
    AnesthesiaStartDate = 'anesStartDate',
    AnesthesiaStartTime = 'anesStartTime',
    Anesthetist1 = 'anesthetist1',
    Asa = 'asa',
    CancellationReason1 = 'cancellationReason1',
    CancellationReason2 = 'cancellationReason2',
    CombinationTherapyUsed = 'comboTherapyUsed',
    CurrentMedsInRecord = 'meds',
    DateOfBirth = 'dob',
    DateOfService = 'dos',
    Delay = 'delayIndicated',
    DelayReason = 'delayReason',
    DeliveryDate = 'deliveryDate',
    DeliveryTime = 'deliveryTime',
    DifficultAirway = 'diffAirway',
    EncounterNumber = 'encounterNumber',
    EvaluatedDayPriorToSurgery = 'evalPriorToSurgery',
    FirstCase = 'firstCase',
    FirstName = 'firstName',
    Gender = 'gender',
    HandoffProtocolUsed = 'handoffProtocolUsed',
    InhalationalAgentUsed = 'inhalAgentUsed',
    LastName = 'lastName',
    Mda1 = 'mda1',
    Mda1EndDate = 'mda1EndDate',
    Mda1EndTime = 'mda1EndTime',
    Mda1StartDate = 'mda1StartDate',
    Mda1StartTime = 'mda1StartTime',
    Mda2 = 'mda2',
    Mda2EndDate = 'mda2EndDate',
    Mda2EndTime = 'mda2EndTime',
    Mda2StartDate = 'mda2StartDate',
    Mda2StartTime = 'mda2StartTime',
    Mda3 = 'mda3',
    Mda3EndDate = 'mda3EndDate',
    Mda3EndTime = 'mda3EndTime',
    Mda3StartDate = 'mda3StartDate',
    Mda3StartTime = 'mda3StartTime',
    Mda4 = 'mda4',
    Mda4EndDate = 'mda4EndDate',
    Mda4EndTime = 'mda4EndTime',
    Mda4StartDate = 'mda4StartDate',
    Mda4StartTime = 'mda4StartTime',
    MultiModalPainManagement = 'mmPainMgmt',
    NeuromuscularBlockUsed = 'nmbUsed',
    NmbExtubationTimeRequirement = 'gtThreeHrtsExtubNmb',
    NmbReversalNotIndicated = 'reversalNotIndicated',
    OrLocation = 'orLocn',
    OrLocation2 = 'orLocn2',
    PacuPain = 'pacuPain',
    PatientIncapacitated = 'patientIncapacitated',
    PatientisSmoker = 'patientIsSmoker',
    PatientType = 'patientType',
    PacuArrivalDate = 'pacuArrivalDate',
    PacuArrivalTime = 'pacuArrivalTime',
    PostOpDisposition = 'postOpDispo',
    PreOpAlcoholTobacco = 'preOpAlcTob',
    PreOpGerd = 'preOpGerd',
    PreOpGlaucoma = 'preOpGlaucoma',
    PreOpOsa = 'preOpOsa',
    PreOpPonv = 'preOpPonv',
    PrimaryAnesthetic = 'primaryAnes',
    SafetyChecklistUsed = 'slu',
    SameDayAddOn = 'sameDayAddOn',
    SameDayCancellation = 'sameDayCancellation',
    ScheduledStartDate = 'scheduledStartDate',
    ScheduledStartTime = 'scheduledStartTime',
    Surgeon = 'surgeon',
    SurgeryEndDate = 'surgEndDate',
    SurgeryEndTime = 'surgEndTime',
    SurgeryStartDate = 'surgStartDate',
    SurgeryStartTime = 'surgStartTime',
    TransferredTo = 'transferredTo',
}

const errorMap = new Map([
    [DataEntryErrorType.DataNotEntered, 'Missing'],
    [DataEntryErrorType.FieldIllegible, 'Illegible'],
    [DataEntryErrorType.LocationNotFound, 'Location Not Found'],
    [DataEntryErrorType.ProviderNotFount, 'Provider Not Found'],
]);

const fieldMap = new Map([
    [DataEntryField.AdverseEvent1, 'Adverse Event 1'],
    [DataEntryField.AdverseEvent2, 'Adverse Event 2'],
    [DataEntryField.AdverseEvents, 'Adverse Events'],
    [DataEntryField.AnesthesiaEndDate, 'Anesthesia End Date'],
    [DataEntryField.AnesthesiaEndTime, 'Anesthesia End Time'],
    [DataEntryField.AnesthesiaReadyDate, 'Anesthesia Ready Date'],
    [DataEntryField.AnesthesiaReadyTime, 'Anesthesia Ready Time'],
    [DataEntryField.AnesthesiaStartDate, 'Anesthesia Start Date'],
    [DataEntryField.AnesthesiaStartTime, 'Anesthesia Start Time'],
    [DataEntryField.Anesthetist1, 'Anesthetist 1'],
    [DataEntryField.Asa, 'ASA PS Code'],
    [DataEntryField.CancellationReason1, 'Cancellation Reason 1'],
    [DataEntryField.CancellationReason2, 'Cancellation Reason 2'],
    [DataEntryField.CombinationTherapyUsed, 'Combination Therapy Used'],
    [DataEntryField.CurrentMedsInRecord, 'Current Meds Documented in Record'],
    [DataEntryField.DateOfBirth, 'Date of Birth'],
    [DataEntryField.DateOfService, 'Date of Service'],
    [DataEntryField.Delay, 'Case Delayed'],
    [DataEntryField.DelayReason, 'Delay Reason'],
    [DataEntryField.DeliveryDate, 'Delivery Date'],
    [DataEntryField.DeliveryTime, 'Delivery Time'],
    [DataEntryField.DifficultAirway, 'Difficult Airway'],
    [DataEntryField.EncounterNumber, 'Encounter Number'],
    [DataEntryField.EvaluatedDayPriorToSurgery, 'Evaluated Day Prior to Surgery'],
    [DataEntryField.FirstCase, 'First Case'],
    [DataEntryField.FirstName, 'First Name'],
    [DataEntryField.Gender, 'Gender'],
    [DataEntryField.HandoffProtocolUsed, 'Handoff Protocol Used'],
    [DataEntryField.InhalationalAgentUsed, 'Inhalational Agent Used'],
    [DataEntryField.LastName, 'Last Name'],
    [DataEntryField.Mda1, 'Anesthesia Provider #1'],
    [DataEntryField.Mda1EndDate, 'Anesthesia Provider #1 End Date'],
    [DataEntryField.Mda1EndTime, 'Anesthesia Provider #1 End Time'],
    [DataEntryField.Mda1StartDate, 'Anesthesia Provider #1 Start Date'],
    [DataEntryField.Mda1StartTime, 'Anesthesia Provider #1 Start Time'],
    [DataEntryField.Mda2, 'Anesthesia Provider #2'],
    [DataEntryField.Mda2EndDate, 'Anesthesia Provider #2 End Date'],
    [DataEntryField.Mda2EndTime, 'Anesthesia Provider #2 End Time'],
    [DataEntryField.Mda2StartDate, 'Anesthesia Provider #2 Start Date'],
    [DataEntryField.Mda2StartTime, 'Anesthesia Provider #2 Start Time'],
    [DataEntryField.Mda3, 'Anesthesia Provider #3'],
    [DataEntryField.Mda3EndDate, 'Anesthesia Provider #3 End Date'],
    [DataEntryField.Mda3EndTime, 'Anesthesia Provider #3 End Time'],
    [DataEntryField.Mda3StartDate, 'Anesthesia Provider #3 Start Date'],
    [DataEntryField.Mda3StartTime, 'Anesthesia Provider #3 Start Time'],
    [DataEntryField.Mda4, 'Anesthesia Provider #4'],
    [DataEntryField.Mda4EndDate, 'Anesthesia Provider #4 End Date'],
    [DataEntryField.Mda4EndTime, 'Anesthesia Provider #4 End Time'],
    [DataEntryField.Mda4StartDate, 'Anesthesia Provider #4 Start Date'],
    [DataEntryField.Mda4StartTime, 'Anesthesia Provider #4 Start Time'],
    [DataEntryField.MultiModalPainManagement, 'Multi Modal Pain Management'],
    [DataEntryField.NeuromuscularBlockUsed, ' Neuromuscular Block Used'],
    [DataEntryField.NmbExtubationTimeRequirement, 'NMB Extubation Time Requirement'],
    [DataEntryField.NmbReversalNotIndicated, 'NMB Reversal Not Indicated'],
    [DataEntryField.OrLocation, 'OR Location'],
    [DataEntryField.OrLocation2, 'OR Location 2'],
    [DataEntryField.PacuArrivalDate, 'PACU Arrival Date'],
    [DataEntryField.PacuArrivalTime, 'PACU Arrival Time'],
    [DataEntryField.PacuPain, 'PACU Pain Score'],
    [DataEntryField.PatientIncapacitated, 'Patient Incapacitated'],
    [DataEntryField.PatientisSmoker, 'Patient is Smoker'],
    [DataEntryField.PatientType, 'Patient Type'],
    [DataEntryField.PostOpDisposition, 'Post Op Disposition'],
    [DataEntryField.PreOpAlcoholTobacco, 'PreOp Eval Alc/EtOH'],
    [DataEntryField.PreOpGerd, 'PreOp GERD'],
    [DataEntryField.PreOpGlaucoma, 'PreOp Eval Glaucoma'],
    [DataEntryField.PreOpOsa, 'PreOp Eval OSA'],
    [DataEntryField.PreOpPonv, 'PreOp Eval PONV'],
    [DataEntryField.PrimaryAnesthetic, 'Primary Anesthetic'],
    [DataEntryField.SafetyChecklistUsed, 'Safety Checklist Used'],
    [DataEntryField.SameDayAddOn, 'Same Day Add-On'],
    [DataEntryField.SameDayCancellation, 'Same Day Cancellation'],
    [DataEntryField.ScheduledStartDate, 'Scheduled Start Date'],
    [DataEntryField.ScheduledStartTime, 'Scheduled Start Time'],
    [DataEntryField.Surgeon, 'Surgeon'],
    [DataEntryField.SurgeryEndDate, 'Surgery End Date'],
    [DataEntryField.SurgeryEndTime, 'Surgery End Time'],
    [DataEntryField.SurgeryStartDate, 'Surgery Start Date'],
    [DataEntryField.SurgeryStartTime, 'Surgery Start Time'],
    [DataEntryField.TransferredTo, 'Transferred To'],
]);

export function getErrorLabel(errorType:DataEntryErrorType, fieldName:DataEntryField) {
    if (errorMap.has(errorType) && fieldMap.has(fieldName))
        return `${fieldMap.get(fieldName)} ${errorMap.get(errorType)}`;
    else
        return errorType + '-' + fieldName;
}