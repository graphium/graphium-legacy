<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" version="2.0.0">
    <xs:annotation>
        <xs:documentation>This document describes the design of the form definition for Graphium EMR v2. This form definition defines all elements related to the design and definition of forms within the EMR system. The form definition is an XML based definition that will be utilized by both the client and services layers of the system and control layout, interaction, validation, and other control logic required for implementation of a diverse set of forms as utilized in the EMR.</xs:documentation>
    </xs:annotation>
    <xs:element name="form">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation>Form is the top level node that defines every form definition. A form can contain many pages. Each form has a set of global attributes that define information that applies to all aspects of the form.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                <xs:element maxOccurs="1" minOccurs="0" name="title" type="xs:string"/>
                <xs:element maxOccurs="1" minOccurs="0" name="description" type="xs:string"/>
                <xs:element name="pages">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="page" maxOccurs="unbounded" minOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>Each Page describes an available page within the form. Pages contain fields and regions which are the primary control feature of the document.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:annotation>
                                        <xs:documentation>A page is the primary representation of it’s paper based counterpart. A form may contain a single, or multiple pages. Some pages can be replicated by the user (ie. the Anesthesia IntraOp form) within a single form to add more data input capability. It is expected that during rendering only a single page is shown at a time, although this is not a requirement and can be dictacted by the form input interface (e.g. Graphium Scribe). Utilization of the minCount and maxCount allows for control of what we are terming ‘optional’ and ‘default’ pages within a form.</xs:documentation>
                                    </xs:annotation>
                                    <xs:sequence>
                                        <xs:element maxOccurs="1" minOccurs="0" name="title"
                                            type="xs:string"/>
                                        <xs:element maxOccurs="1" minOccurs="0" name="description"
                                            type="xs:string"/>
                                        <xs:element maxOccurs="1" minOccurs="1" name="regions">
                                            <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="pageRegion">
                                                  <xs:annotation>
                                                  <xs:documentation>Page regions represent a zoomable area of the page if the zoomable functionality is supported. It also can contain fields, although some regions may not contain fields and will only allow handwriting.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:annotation>
                                                  <xs:documentation>Page regions (previously called form regions in v1) contain information about the size of a given zoomable area within a page. It is expected (although not required) that in implementations of the form renderer, page regions can be drawn upon using pen based input and that fields can be interacted with via their specific controls.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:sequence>
                                                  <xs:element maxOccurs="1" minOccurs="0"
                                                  name="title" nillable="false" type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The title for this region as it will appear to the user in the application UI.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:element>
                                                  <xs:element maxOccurs="1" minOccurs="0"
                                                  name="description" nillable="false"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>The description of the region as it will appear to the user within the application UI.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:element>
                                                  </xs:sequence>
                                                  <xs:attribute name="name" type="xs:string"
                                                  use="required">
                                                  <xs:annotation>
                                                  <xs:documentation>The name of the field on this page. The name must be unique to the form definition.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  <xs:attribute name="vertices" use="required"
                                                  type="xs:string">
                                                  <xs:annotation>
                                                  <xs:documentation>A comma delimited list of alternating x and y coordinate values (based on page space) that form a polygon that defines the page region. The final vertex will connect to the initial vertex to complete the polygon.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="inputs" maxOccurs="1" minOccurs="1">
                                            <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="formInput">
                                                  <xs:annotation>
                                                  <xs:documentation>Represents an interactive element, overlayed on the form, that can be used to modify a discrete data value such as those stored in the form model. It is assumed that a specific area that is specified by the input triggers the display of a field input that will allow for entry of the data.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:choice maxOccurs="unbounded">
                                                  <xs:element name="title" type="xs:string"
                                                  minOccurs="0" maxOccurs="1"/>
                                                  <xs:element maxOccurs="1" minOccurs="0"
                                                  name="description" nillable="false"
                                                  type="xs:string"/>
                                                  <xs:element name="inputMethods" minOccurs="1"
                                                  maxOccurs="1">
                                                  <xs:annotation>
                                                  <xs:documentation>Includes the instructions and information on how the data for this field will be input by the user. It is assumed that data will be cast into the data type specified by the model property that is associated with this input.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:choice maxOccurs="unbounded">
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="list">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute name="valueSetType"
                                                  type="ValueSetTypes" use="required"/>
                                                  <xs:attribute name="persistedItemAttribute"
                                                  type="xs:string" use="required"/>
                                                  <xs:attribute name="labelAttribute"
                                                  type="xs:string"/>
                                                  <xs:attribute name="labelExpression"
                                                  type="xs:string"/>
                                                  <xs:attribute name="valueSetName" type="xs:string"
                                                  use="required"/>
                                                  <xs:attribute name="valueSetCategoryName"
                                                  type="xs:string" use="required"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="checkBox" type="InputMethod"
                                                  maxOccurs="unbounded" minOccurs="0"/>
                                                  <xs:element name="date" type="InputMethod"
                                                  maxOccurs="unbounded" minOccurs="0"/>
                                                  <xs:element name="dateTime" type="InputMethod"
                                                  maxOccurs="unbounded" minOccurs="0"/>
                                                  <xs:element name="time" type="InputMethod"
                                                  maxOccurs="unbounded" minOccurs="0"/>
                                                  <xs:element name="handwriting"
                                                  maxOccurs="unbounded" minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute name="width" type="xs:float"
                                                  use="required"/>
                                                  <xs:attribute name="height" type="xs:float"
                                                  use="required"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="textInput" maxOccurs="unbounded"
                                                  minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute default="false" name="multiLine"
                                                  type="xs:boolean" use="optional"/>
                                                  <xs:attribute name="maxChar" type="xs:int"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="numberPad" maxOccurs="unbounded"
                                                  minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute name="numberType">
                                                  <xs:annotation>
                                                  <xs:documentation>One of type int or float.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="camera" maxOccurs="unbounded"
                                                  minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute name="width" type="xs:float"
                                                  use="required"/>
                                                  <xs:attribute name="height" type="xs:float"
                                                  use="required"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="radio" type="InputMethod"
                                                  maxOccurs="unbounded" minOccurs="0"> </xs:element>
                                                  <xs:element name="hidden" maxOccurs="unbounded"
                                                  minOccurs="0">
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="InputMethod">
                                                  <xs:attribute name="value" use="required"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  </xs:choice>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <!--
                                        <xs:element name="renderInstruction" minOccurs="0"
                                            maxOccurs="1">
                                            <xs:annotation>
                                                <xs:documentation>If not defined, this field is not redered on the form or visible to the user. If it is defined, this element provides instructions on how the value is rendered on the form based on the value associated with this field and stored in the referenced entity.</xs:documentation>
                                            </xs:annotation>
                                        </xs:element>
                                        -->
                                                  <xs:element name="hitAreas">
                                                  <xs:complexType>
                                                  <xs:choice maxOccurs="unbounded">
                                                  <xs:element maxOccurs="unbounded" minOccurs="1"
                                                  name="hitArea">
                                                  <xs:complexType>
                                                  <xs:attribute name="vertices" type="xs:string"/>
                                                  <xs:attribute name="navOrder"
                                                  type="xs:nonNegativeInteger"/>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  </xs:choice>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="validators" minOccurs="0"
                                                  maxOccurs="1">
                                                  <xs:annotation>
                                                  <xs:documentation>The list of validators that will be applied to the input before it is persisted into the model. Multiple validators can be specified, an implicit AND is applied when evalutating them. If any validator returns 'false', the Form Input is considered to be in an invalid state.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:choice maxOccurs="unbounded">
                                                  <xs:element name="notNull">
                                                  <xs:complexType>
                                                  <xs:attribute name="modelProperty"
                                                  type="xs:string" use="required"/>
                                                  <xs:attribute name="sequenceNumber"
                                                  type="xs:string" use="optional"/>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="greaterThan">
                                                  <xs:complexType>
                                                  <xs:attribute name="value" type="xs:float"/>
                                                  <xs:attribute name="modelProperty"
                                                  type="xs:string" use="required"/>
                                                  <xs:attribute name="sequenceNumber"
                                                  type="xs:string" use="optional"/>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="lessThan">
                                                  <xs:complexType>
                                                  <xs:attribute name="value" type="xs:float"/>
                                                  <xs:attribute name="modelProperty"
                                                  type="xs:string" use="required"/>
                                                  <xs:attribute name="sequenceNumber"
                                                  type="xs:string" use="optional"/>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="expression">
                                                  <xs:annotation>
                                                  <xs:documentation>An expression validator runs an expression using standard form expression semantics and context. It is assumed that if the expression returns 'true' the validator passes, if it returns false it fails.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:attribute name="expression"/>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  </xs:choice>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  </xs:choice>
                                                  <xs:attribute name="name" type="xs:string"
                                                  use="required"/>
                                                  <xs:attribute name="inputMethodsLayout"
                                                  default="horizontal" use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>One of type 'vertical' or 'horizontal'. This will layout any input components in that distinct order.</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  </xs:complexType>
                                                  <xs:unique name="unique-fieldName">
                                                  <xs:selector xpath="field"/>
                                                  <xs:field xpath="@name"/>
                                                  </xs:unique>
                                                  </xs:element>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="renderers" maxOccurs="1" minOccurs="1">
                                            <xs:complexType>
                                                <xs:choice maxOccurs="unbounded">
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="label">
                                                  <xs:annotation>
                                                  <xs:documentation>A non-interactive, non-editable, single line label that appears within the page and can be based on values that exist on this page or other pages within the application.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="Renderer">
                                                  <xs:attribute name="font" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="color" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="text" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="textAlign" use="optional">
                                                  <xs:simpleType>
                                                  <xs:restriction base="xs:string">
                                                  <xs:enumeration value="left"/>
                                                  <xs:enumeration value="right"/>
                                                  <xs:enumeration value="center"/>
                                                  </xs:restriction>
                                                  </xs:simpleType>
                                                  </xs:attribute>
                                                  <xs:attribute name="visible" type="xs:string"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="dateTimeLabel">
                                                  <xs:annotation>
                                                  <xs:documentation>A non-interactive, non-editable, single line label that appears within the page. This is for explicitley rendering labels that render a date or datetime value.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="Renderer">
                                                  <xs:attribute name="font" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="color" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="date" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="dateStyle" use="required">
                                                  <xs:simpleType>
                                                  <xs:restriction base="xs:string">
                                                  <xs:enumeration value="none"/>
                                                  <xs:enumeration value="short-us"/>
                                                  <xs:enumeration value="medium-us"/>
                                                  <xs:enumeration value="long-us"/>
                                                  </xs:restriction>
                                                  </xs:simpleType>
                                                  </xs:attribute>
                                                  <xs:attribute name="timeStyle" use="required">
                                                  <xs:simpleType>
                                                  <xs:restriction base="xs:string">
                                                  <xs:enumeration value="none"/>
                                                  <!-- No time displayed -->
                                                  <xs:enumeration value="short12"/>
                                                  <!-- h:mma -->
                                                  <xs:enumeration value="medium12"/>
                                                  <!-- hh:mma -->
                                                  <xs:enumeration value="medium24"/>
                                                  <!-- HH:mm -->
                                                  </xs:restriction>
                                                  </xs:simpleType>
                                                  </xs:attribute>
                                                  <xs:attribute name="text" type="xs:string"
                                                  use="optional">
                                                  <xs:annotation>
                                                  <xs:documentation>For DateTimeLabelRenderer's the text is optional, but can be used to modify the text this renderer shows by use of the {date} token. For example, to say "DOB: 01/23/2001" the text would be "DOB: {date}". </xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  <xs:attribute name="textAlign" use="optional">
                                                  <xs:simpleType>
                                                  <xs:restriction base="xs:string">
                                                  <xs:enumeration value="left"/>
                                                  <xs:enumeration value="right"/>
                                                  <xs:enumeration value="center"/>
                                                  </xs:restriction>
                                                  </xs:simpleType>
                                                  </xs:attribute>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="text">
                                                  <xs:annotation>
                                                  <xs:documentation>A multiline section of text.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="Renderer">
                                                  <xs:sequence>
                                                  <xs:element maxOccurs="1" minOccurs="1"
                                                  name="text"/>
                                                  </xs:sequence>
                                                  <xs:attribute name="lineHeight" type="xs:float"/>
                                                  <xs:attribute name="font" type="xs:string"
                                                  use="optional"/>
                                                  <xs:attribute name="color" type="xs:string"
                                                  use="optional"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="bitmap">
                                                  <xs:annotation>
                                                  <xs:documentation>Represents a renderer that can render a discrete bitmap onto the form page. The bitmap value can be from a model property or from a url or other external source.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="Renderer">
                                                  <xs:attribute name="modelProperty"
                                                  type="xs:string" use="required"/>
                                                  <xs:attribute name="sequenceNumber"
                                                  type="xs:string" use="optional"/>
                                                  <xs:attribute name="maintainAspectRatio"
                                                  type="xs:string"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                  <xs:element maxOccurs="unbounded" minOccurs="0"
                                                  name="shape">
                                                  <xs:annotation>
                                                  <xs:documentation>A circle that is drawn onto the form based on the values specified.</xs:documentation>
                                                  </xs:annotation>
                                                  <xs:complexType>
                                                  <xs:complexContent>
                                                  <xs:extension base="Renderer">
                                                  <xs:attribute name="shapeType" type="xs:string"
                                                  use="required">
                                                  <xs:annotation>
                                                  <xs:documentation>The type of shape that will be rendered into the space given. The shape will be resized and skewed to fit the area specified. Should be one of type [oval,rectangle,check]</xs:documentation>
                                                  </xs:annotation>
                                                  </xs:attribute>
                                                  <xs:attribute name="fillColor" type="xs:string"/>
                                                  <xs:attribute name="strokeColor" type="xs:string"/>
                                                  <xs:attribute name="strokeWidth" type="xs:string"/>
                                                  <xs:attribute name="visible" type="xs:string"/>
                                                  </xs:extension>
                                                  </xs:complexContent>
                                                  </xs:complexType>
                                                  </xs:element>
                                                </xs:choice>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="name" type="xs:string" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The name of the page. The name must be unique to the form and is not expected to be used within the UI of the application, only for mapping of pages to their relevant definition metadata. A system generated id will be created for each page.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="order" type="xs:nonNegativeInteger"
                                        use="required">
                                        <xs:annotation>
                                            <xs:documentation>The order at which this page appears in the application. When duplicate pages are added, they are added behind their counterpart within the display, sorted by the date they were created in ascending order.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="bitmapWidth" type="xs:float" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The pixel width of the page, should match background image.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="bitmapHeight" type="xs:float" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The pixel height of the page, should match the background image.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="pointWidth" type="xs:int" use="required">
                                        <xs:annotation>
                                            <xs:documentation>The width in points of the physical size of the page. Used for printing and exporting of the page to PDF.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="pointHeight" type="xs:int">
                                        <xs:annotation>
                                            <xs:documentation>The height in points of the physical size of the page. Used for printing and exporting of the page to PDF.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="bitmapEncodeType" type="xs:string"
                                        use="required">
                                        <xs:annotation>
                                            <xs:documentation>The encode type that the image is encoded in. The value follows the internet media type format. Currently supported values include image/jpeg image/png and image/gif.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="minCount" type="xs:nonNegativeInteger"
                                        use="required">
                                        <xs:annotation>
                                            <xs:documentation>This value cannot be greater than @maxCount. The default number of pages of this type that appear within the form.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="maxCount" type="xs:positiveInteger">
                                        <xs:annotation>
                                            <xs:documentation>Cannot be less than @minCount, and if not defined, this page can be duplicated as many times as the user wishes. If defined, this indicates that the page can be repeated up to a maximum of the number of times indicated in the value. If the user indicates that they would like to add a another page of the current type, the page will be added immediately after the page of this type in ascending order of when they were created.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                                <xs:unique name="unique-pageName">
                                    <xs:selector xpath="page"/>
                                    <xs:field xpath="@name"/>
                                </xs:unique>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="expressions" maxOccurs="1" minOccurs="1">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="dynamicExpression" type="DynamicExpression"
                                maxOccurs="unbounded" minOccurs="0"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element maxOccurs="1" minOccurs="1" name="valueSets">
                    <xs:annotation>
                        <xs:documentation>These are form specific value sets. In a list input, the valueSetName attribute will first reference any names in this list. If a name is not found, it will then attempt to use an organization or facility list.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="valueSet">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element maxOccurs="unbounded" minOccurs="0"
                                            name="detail">
                                            <xs:complexType>
                                                <xs:attribute name="id" type="xs:positiveInteger"/>
                                                <xs:anyAttribute namespace="##any"
                                                  processContents="lax"/>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="name" type="xs:string" use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>A globally unique ID that represents this form. No two forms in the EMR system can share the same ID.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="modelName" type="xs:string"/>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="ModelProperty">
        <xs:attribute name="propertyName"/>
        <xs:attribute name="sequenceNumber"/>
    </xs:complexType>
    <xs:complexType name="DynamicExpression">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string"/>
                <xs:attribute name="language" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="InputMethod">
        <xs:all>
            <xs:element maxOccurs="1" minOccurs="0" name="description" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="title" type="xs:string"/>
            <xs:element minOccurs="0" name="bindings">
                <xs:complexType>
                    <xs:choice minOccurs="0">
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="valueListItemBinding"
                            type="ListBindingType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="expressionBinding"
                            type="ExpressionBindingType"/>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="modelBinding"
                            type="ModelBindingType"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:all>
        <xs:attribute name="modelProperty" type="xs:string" use="required"/>
        <xs:attribute name="sequenceNumber" type="xs:string" use="optional"/>
        <xs:attribute name="suggestedValue" use="optional"/>
        <xs:attribute name="percentWidth" use="optional" type="xs:float"/>
    </xs:complexType>
    <xs:complexType name="Renderer">
        <xs:attribute name="x" type="xs:float" use="required"/>
        <xs:attribute name="y" type="xs:float" use="required"/>
        <xs:attribute name="width" type="xs:float" use="required"/>
        <xs:attribute name="height" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:simpleType name="ValueSetTypes">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LOCAL"/>
            <xs:enumeration value="REMOTE"/>
            <xs:enumeration value="CUSTOM"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ListBindingType">
        <xs:attribute name="persistedItemAttribute" type="xs:string" use="required"/>
        <xs:attribute name="modelProperty" type="xs:string" use="required"/>
        <xs:attribute name="sequenceNumber" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="ExpressionBindingType">
        <xs:attribute name="expression" type="xs:string" use="required"/>
        <xs:attribute name="modelProperty" type="xs:string" use="required"/>
        <xs:attribute name="sequenceNumber" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="ModelBindingType">
        <xs:attribute name="modelProperty" type="xs:string" use="required"/>
        <xs:attribute name="sequenceNumber" type="xs:string" use="optional"/>
    </xs:complexType>
</xs:schema>
